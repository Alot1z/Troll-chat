name: Smart Unpack ZIPs Intelligently

on:
  workflow_dispatch:
    inputs:
      zipfile:
        description: 'ZIP filename (optional). Leave blank to process all .zip files in root.'
        required: false

jobs:
  unpack:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 📦 Detect ZIP file(s)
      id: zipdetect
      run: |
        if [ -z "${{ github.event.inputs.zipfile }}" ]; then
          ZIPS=$(find . -maxdepth 1 -type f -name "*.zip" | sed 's|^\./||')
        else
          ZIPS="${{ github.event.inputs.zipfile }}"
        fi
        echo "zip_files<<EOF" >> $GITHUB_OUTPUT
        echo "$ZIPS" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: 🔍 Unpack and replace intelligently
      run: |
        for zip in ${{ steps.zipdetect.outputs.zip_files }}; do
          echo "🔍 Processing: $zip"

          # Create temp dir for extraction
          mkdir -p tmp_unzip
          unzip -o "$zip" -d tmp_unzip

          # Handle all files and dirs from extracted ZIP
          cd tmp_unzip
          find . -type f | while read -r file; do
            clean_path="${file#./}"  # remove ./ prefix
            dest_path="../$clean_path"

            if [ -f "$dest_path" ]; then
              echo "🗑️ Removing existing file: $dest_path"
              rm -f "$dest_path"
            fi

            echo "📥 Moving new file to: $dest_path"
            mkdir -p "$(dirname "$dest_path")"
            mv "$file" "$dest_path"
          done
          cd ..

          # Clean up
          rm -rf tmp_unzip "$zip"
        done

    - name: ✅ Commit and push changes
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add -A
        git diff --cached --quiet || git commit -m "✅ Smart unpack and update from ZIP"
        git push
